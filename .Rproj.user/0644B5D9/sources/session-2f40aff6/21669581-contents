
library(Seurat)
library(plyr)
library(scater)
library(stringr)
library(future)
library(ggplot2)
library(cowplot)
library(reshape2)
library(data.table)
library(tidyverse)
library(future.apply)
library(RColorBrewer)
library(SingleCellExperiment)
library(data.table)
library(tibble)
library(harmony)



mycol <- c(brewer.pal(5,"Set1"), brewer.pal(8,"Set2"),
           brewer.pal(11,"Set3"), brewer.pal(12,"Paired"),
           brewer.pal(8,"Accent"), brewer.pal(11,"Spectral"),
           brewer.pal(11,"BrBG"), brewer.pal(11,"PiYG"),
           brewer.pal(11,"PuOr"),brewer.pal(11,"RdBu"))


source("/home/ug1268/tools/mouse_sc/public_function_mouse.R")
source("/home/ug1268/tools/mouse_sc/citeseq_function.R")
source("/home/ug1268/program/ICB/cohorts/autocluster.R")

## CD8T细胞数据提取

ICC_from_tumor_Nature <- readRDS("~/Steven Lijiajun/Steven/ICC_Nature队列/ICC_from_tumor_Nature.rds")
datafilt <- ICC_from_tumor_Nature

table(datafilt$celltype)

meta <- datafilt@meta.data

cells_CD8 <- rownames(meta)[grep("^(CD8T)", meta$celltype)]

Tcell <- subset(datafilt, cells = cells_CD8)

## CD8T细胞 pipeline

nfeatures = 2000
ndim = 15
neigh = 100
dist = 0.5
res = 0.2

human_mrna <- read.table("/home/ug1268/tools/human_sc/mRNA_list.txt",sep="\t",header=T,check.names=F,row.names = 1)

common <- intersect(rownames(Tcell), rownames(human_mrna))
Tcell <- Tcell[common,]

Tcell <- RunHarmony(Tcell, group.by.vars = "sample",dims.use = 1:50,
                    assay.use = "RNA")

Tcell <- FindNeighbors(Tcell, k.param = neigh,
                       dims = 1:ndim, reduction = "harmony")

Tcell <- FindClusters(Tcell, resolution = 0.3, n.iter = 50)

Tcell <- RunUMAP(Tcell, dims = 1:ndim,
                 n.neighbors = neigh, min.dist = dist,
                 reduction = "harmony", reduction.name = "umap_harmony")

dimplot_new(data = Tcell,
            reduction = "umap_harmony",
            pt.size = 1.5, label = F,
            group.by = c("celltype"))

## T细胞耗竭和功能评分

Tex <- c("PDCD1", "TIGIT", "CTLA4", "LAG3", "HAVCR2")

Tact <- c("CD40LG", "CD69", "HLA-DPA1", "HLA-DPB1", "HLA-DQB1", "HLA-DRB5",
  "ICOS", "TNFRSF4", "NFAT5", "NFATC3", "NFATC2",
  "LCP2", "LAT", "ZAP70", "LCK")

Tcyto <- c(
  "GZMB", "GZMA", "PRF1", "GNLY", "IFNG", "FASLG", "TNF"
)

Tcell <- AddModuleScore(
  object = Tcell,
  features = list(Tex),
  name = "Tex_Score")

Tcell <- AddModuleScore(
  object = Tcell,
  features = list(Tact),
  name = "Tact_Score")

Tcell <- AddModuleScore(
  object = Tcell,
  features = list(Tcyto),
  name = "Tcyto_Score")

## 双蝴蝶图

library(dplyr)

meta.data <- Tcell@meta.data

meta.data <- meta.data %>%
  mutate(row_id = ave(seq_len(nrow(meta.data)), celltype, FUN = seq_along))
# 这里 row_id 就是每个“评分位置”的行号

Tcyto_matrix <- meta.data %>%
  pivot_wider(
    id_cols = row_id,          # 用生成的行号作为行ID
    names_from = celltype,     # 列名来自 celltype
    values_from = Tcyto_Score1        # 值来自评分
  ) %>%
  select(-row_id)              # 如果不需要行ID就删掉

Tact_matrix <- meta.data %>%
  pivot_wider(
    id_cols = row_id,          # 用生成的行号作为行ID
    names_from = celltype,     # 列名来自 celltype
    values_from = Tact_Score1        # 值来自评分
  ) %>%
  select(-row_id)              # 如果不需要行ID就删掉

Tex_matrix <- meta.data %>%
  pivot_wider(
    id_cols = row_id,          # 用生成的行号作为行ID
    names_from = celltype,     # 列名来自 celltype
    values_from = Tex_Score1        # 值来自评分
  ) %>%
  select(-row_id)              # 如果不需要行ID就删掉

min_val <- min(Tex_matrix, na.rm = TRUE)
max_val <- max(Tex_matrix, na.rm = TRUE)

Tex_matrix <- as.data.frame(
  -0.5 + (Tex_matrix - min_val) * (1.0 - (-0.5)) / (max_val - min_val)
)


Tcyto_matrix <- Tcyto_matrix %>%
  pivot_longer(cols = everything(),
               names_to = "Variable",
               values_to = "Value")

Tact_matrix <- Tact_matrix %>%
  pivot_longer(cols = everything(),
               names_to = "Variable",
               values_to = "Value")

Tex_matrix <- Tex_matrix %>%
  pivot_longer(cols = everything(),
               names_to = "Variable",
               values_to = "Value")

table(Tcell$celltype)

cd8t_order <- c(
  "CD8T_01_CCR7",
  "CD8T_02_CX3CR1",
  "CD8T_03_GZMK_S1PR1",
  "CD8T_04_GNLY",
  "CD8T_05_KLRD1",
  "CD8T_06_CD69",
  "CD8T_07_PLCG2",
  "CD8T_08_GZMK",
  "CD8T_09_PDCD1_IFNG",
  "CD8T_10_PDCD1",
  "CD8T_11_SLC4A10",
  "CD8T_12_IFIT3",
  "CD8T_13_STMN1"
)

Tcyto_matrix$Variable <-factor(Tcyto_matrix$Variable, levels = cd8t_order)
Tact_matrix$Variable <-factor(Tact_matrix$Variable, levels = cd8t_order)
Tex_matrix$Variable <-factor(Tex_matrix$Variable, levels = cd8t_order)

col <- c("#A6D719", "#176EBF", "#00A8DE", "#AEE0E8",
         "#00A9A3", "#FBD324", "#F28A24", "#A52828",
         "#A37CB7", "#F2D7EE", "#CD6981", "#FBD0C0",
         "#F15E4C", "#ECB2C8", "#B2DBBF", "#CCDAD1")

text_col <- c("#000000","#000000","#f04625","#f04625","#f04625","#000000","#000000",
              "#f04625","#00a8ee","#00a8ee","#000000","#000000","#000000")

# 画图

Tact_plot <- ggplot(Tact_matrix, aes(y = Variable, x = Value, fill = Variable)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.15, fill = "white", outliers = FALSE) +
  geom_vline(xintercept = 0.0, linetype = "dashed", color = "#bf1a2c", size = 1) +
  scale_x_continuous(expand = c(0, 0), position = "top", guide = guide_axis(angle = -90)) +
  scale_fill_manual(values = col) +
  labs(title = "Tact feature") +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 10, hjust = 0.5, colour = text_col),
    axis.text.x = element_text(size = 10, color = "black"),
    axis.title.x = element_blank(),  # 去掉X轴名字
    axis.title.y = element_blank(),
    axis.ticks.length = unit(2, "mm"),
    plot.title = element_text(hjust = 0.5, vjust = -85, size = 15, color = "#f04625"),
    legend.position = "none",
    plot.margin = margin(r = 10, b = 50)
  )

Tact_plot

Tcyto_plot <- ggplot(Tcyto_matrix, aes(y = Variable, x = Value, fill = Variable)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.15, fill = "white", outliers = FALSE) +
  geom_vline(xintercept = 0.0, linetype = "dashed", color = "#bf1a2c", size = 1) +
  scale_x_continuous(expand = c(0, 0), position = "top", guide = guide_axis(angle = -90)) +
  scale_fill_manual(values = col) +
  labs(title = "Tcyto feature") +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 10, hjust = 0.5, colour = text_col),
    axis.text.x = element_text(size = 10, color = "black"),
    axis.title.x = element_blank(),  # 去掉X轴名字
    axis.title.y = element_blank(),
    axis.ticks.length = unit(2, "mm"),
    plot.title = element_text(hjust = 0.5, vjust = -85, size = 15, color = "#f04625"),
    legend.position = "none",
    plot.margin = margin(r = 10, b = 50)
  )

Tcyto_plot

Tex_plot <- ggplot(Tex_matrix, aes(y = Variable, x = Value, fill = Variable)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.15, fill = "white", outliers = FALSE) +
  geom_vline(xintercept = 0.0, linetype = "dashed", color = "#bf1a2c", size = 1, face = "bold.italic") +
  scale_x_continuous(
    limits = c(-0.5, 1),                 # 固定范围
    expand = c(0, 0),
    position = "top",
    guide = guide_axis(angle = -90)
  ) +
  scale_fill_manual(values = col) +
  labs(title = "Tex feature") +
  theme_classic() +
  theme(
    axis.text.y = element_text(size = 11, hjust = 0.5, colour = text_col),
    axis.text.x = element_text(size = 11, color = "black"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.ticks.length = unit(2, "mm"),
    plot.title = element_text(hjust = 0.3, vjust = -85, size = 15, color = "#00a8ee"),
    legend.position = "none",
    plot.margin = margin(r = 10, b = 50)
  )

Tex_plot

Tact_plot <- ggplot(Tact_matrix, aes(y = Variable, x = -Value, fill = Variable)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.15, fill = "white", outliers = FALSE) +
  geom_vline(xintercept = 0.0, linetype = "dashed", color = "#bf1a2c", size = 1, face = "bold.italic") +
  scale_x_continuous(
    expand = c(0, 0),
    position = "top",
    guide = guide_axis(angle = -90),
    labels = function(x) format(abs(x), nsmall = 1)
  ) +
  scale_y_discrete(position = "right") +
  scale_fill_manual(values = col) +
  labs(title = "Tact Feature") +
  theme_classic() +
  theme(
    axis.text.x = element_text(size = 11, color = "black"),
    axis.text.y = element_blank(),
    axis.title = element_blank(),
    axis.ticks.length = unit(2, "mm"),
    plot.title = element_text(hjust = 0.0, vjust = -85, size = 30, color = "#f04625"),
    legend.position = "none",
    plot.margin = margin(l = 5, b = 50)
  )

Tact_plot

Tact_plot + Tex_plot

## 评分的featureplot

featureplot_new(data = Tcell,
                reduction = "umap_harmony",
                pt.size = 1.5,
                color = "blue2red",
                features = "Tcyto_Score1",
                raster = TRUE,
                outlier.rm = TRUE)

Tcell@meta.data <- Tcell@meta.data %>%
  mutate(TNM_stage_iiv = recode(TNM_stage,
                                "IVA" = "IV",
                                "IVB" = "IV"))

prop_back2back(datafilt = Tcell,
               group = "TNM_stage_iiv",
               cluster = "celltype",
               order = TRUE)

prop_back2back_lollipop(datafilt = Tcell,
                        group = "TNM_stage_iiv",
                        group1 = "I",
                        group2 = "IV",
                        cluster = "celltype")

cellmeta <- Tcell@meta.data

table(cellmeta$patient)
table(cellmeta$TNM_stage_iiv)
table(cellmeta$differentiation)

R_oe <- calTissueDist(cellmeta,
                      byPatient = F,
                      colname.cluster = "celltype",
                      colname.patient = "patient",
                      colname.tissue = "differentiation",
                      method = "chisq",
                      min.rowSum = 0)

###数值
col_fun <- colorRamp2(c(0, 1, 2), c("#709acb", "white", "#c93e3f"))
at =  seq(0, 2, by = 0.5)
Heatmap(as.matrix(R_oe),
        show_heatmap_legend = T,
        cluster_rows = T,
        cluster_columns = T,
        row_names_side = 'right',
        show_column_names = T,
        show_row_names = T,
        col = col_fun,
        row_names_gp = gpar(fontsize = 10),
        column_names_gp = gpar(fontsize = 10),
        heatmap_legend_param = list(
          title = "R_o/e",
          at =  seq(0, 2, by = 0.5),
          labels =  seq(0, 2, by = 0.5),
          legend_gp = gpar(fill = col_fun(at))
        ),
        cell_fun = function(j, i, x, y, width, height, fill) {
          grid.text(sprintf("%.2f", R_oe[i, j]), x, y, gp = gpar(fontsize = 8))
        }
)



###+、-
col_fun <- colorRamp2(c(0, 1, 2), c("white", "#ADD8E6", "#00008B"))
at = seq(0, 2, by = 0.5)

#
replace_with_symbol <- function(value) {
  if (value > 1) {
    "+++"
  } else if (value > 0.8) {
    "++"
  } else if (value >= 0.2) {
    "+"
  } else if (value > 0) {
    "+/-"
  } else if (value == 0) {
    "-"
  } else {
    as.character(value) # 处理意外情况
  }
}

Heatmap(as.matrix(R_oe),
        show_heatmap_legend = T,
        cluster_rows = T,
        cluster_columns = F,
        row_names_side = 'right',
        show_column_names = T,
        show_row_names = T,
        col = col_fun,
        row_names_gp = gpar(fontsize = 10),
        column_names_gp = gpar(fontsize = 10),
        heatmap_legend_param = list(
          title = "R_o/e",
          at = seq(0, 2, by = 0.5),
          labels = seq(0, 2, by = 0.5),
          legend_gp = gpar(fill = col_fun(at))
        ),
        cell_fun = function(j, i, x, y, width, height, fill) {
          # 显示符号
          grid.text(replace_with_symbol(R_oe[i, j]), x, y, gp = gpar(fontsize = 8))
          # 可选：在小字体下显示原始数值（如果需要）
          # grid.text(sprintf("\n\n%.2f", R_oe[i, j]), x, y, gp = gpar(fontsize = 6))
        }
)
