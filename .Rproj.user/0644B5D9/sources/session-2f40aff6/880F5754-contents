## 数据读取


library(Seurat)
library(plyr)
library(scater)
library(stringr)
library(future)
library(ggplot2)
library(cowplot)
library(reshape2)
library(ggplot2)
library(data.table)
library(tidyverse)
library(future.apply)
library(harmony)
library(RColorBrewer)
library(SingleCellExperiment)

mycol <- c(brewer.pal(5,"Set1"), brewer.pal(8,"Set2"),
           brewer.pal(11,"Set3"), brewer.pal(12,"Paired"),
           brewer.pal(8,"Accent"), brewer.pal(11,"Spectral"),
           brewer.pal(11,"BrBG"), brewer.pal(11,"PiYG"),
           brewer.pal(11,"PuOr"),brewer.pal(11,"RdBu"))

source("/home/ug1268/tools/mouse_sc/public_function_mouse.R")
source("/home/ug1268/tools/mouse_sc/citeseq_function.R")
setwd("~/Steven Lijiajun/Pancancer ICB B cell atlas/analyses/07_annotation and cellchat/GSE236581/final")

## 数据读取

# seurat 对象
datafilt <- readRDS("~/Steven Lijiajun/Pancancer ICB B cell atlas/cohorts/ICB_2024_CRC_GSE236581/ICB_2024_CRC_GSE236581_all.rds")

table(datafilt$SubCellType)

## 注释数据

datafilt@meta.data <- datafilt@meta.data %>%
  mutate(celltype_major = recode(SubCellType,
                                 "c01_CD4_Tn_CCR7" = "CD4T",
                                 "c02_CD4_Tn_SELL" = "CD4T",
                                 "c03_CD4_Tn_NR4A2" = "CD4T",
                                 "c04_CD4_Tcm_ANXA1" = "CD4T",
                                 "c05_CD4_Tcm_GPR183" = "CD4T",
                                 "c06_CD4_Trm_HSPA1A" = "CD4T",
                                 "c07_CD4_Th17_CTSH" = "CD4T",
                                 "c08_CD4_Tfh_CXCL13_IL6ST" = "CD4T",
                                 "c09_CD4_Th1_CXCL13_HAVCR2" = "CD4T",
                                 "c10_CD4_Temra_GZMB" = "CD4T",
                                 "c11_CD4_Treg_FOXP3" = "Treg",
                                 "c12_CD4_Treg_KLRB1" = "Treg",
                                 "c13_CD4_Treg_TNFRSF9" = "Treg",
                                 "c14_CD4_MT" = "CD4T",
                                 "c15_CD8_Tn_CCR7" = "CD8T",
                                 "c16_CD8_Tn_SELL" = "CD8T",
                                 "c17_CD8_Tcm_GPR183" = "CD8T",
                                 "c18_CD8_Tcm_ANXA1" = "CD8T",
                                 "c19_CD8_Tem_CMC1" = "CD8T",
                                 "c20_CD8_Tem_GZMK" = "CD8T",
                                 "c21_CD8_Trm_XCL1" = "CD8T",
                                 "c22_CD8_Trm_HSPA1B" = "CD8T",
                                 "c23_CD8_Tex_LAYN" = "CD8T",
                                 "c24_CD8_Temra_CX3CR1" = "CD8T",
                                 "c25_CD8_Temra_TYROBP" = "CD8T",
                                 "c26_CD8_MAIT_KLRB1" = "CD8T",
                                 "c27_CD8_MAIT_SLC4A10" = "CD8T",
                                 "c28_CD8_IEL_CD160" = "CD8T",
                                 "c33_ILC_GZMK" = "NKcell",
                                 "c34_ILC_NR4A2" = "NKcell",
                                 "c35_ILC_FCGR3A" = "NKcell",
                                 "c36_ILC_SYNE2" = "NKcell",
                                 "c37_ILC_SLC4A10" = "NKcell",
                                 "c38_ILC_MKI67" = "NKcell",
                                 "c39_NaiveB_TCL1A" = "Bcell",
                                 "c40_NaiveB_IGHD" = "Bcell",
                                 "c41_MemB_CD27" = "Bcell",
                                 "c42_MemB_GPR183" = "Bcell",
                                 "c43_GCB_LRMP" = "Bcell",
                                 "c44_GCB_MKI67" = "Bcell",
                                 "c45_PlasmaB_TXNDC5" = "Plasma",
                                 "c46_PlasmaB_IGHA1" = "Plasma",
                                 "c47_PlasmaB_IGHG1" = "Plasma",
                                 "c48_PlasmaB_MKI67" = "Plasma",
                                 "c49_Mono_CD14" = "Mono",
                                 "c50_Mono_FCGR3A" = "Mono",
                                 "c51_Mono_NFKBIZ" = "Mono",
                                 "c52_Mast_TPSAB1" = "MAST",
                                 "c53_Neu_CXCR2" = "Neutrophil",
                                 "c54_pDC_LILRA4" = "DC",
                                 "c55_pDC_GZMB" = "DC",
                                 "c56_tDC_SIGLEC6" = "DC",
                                 "c57_cDC_CLEC9A" = "DC",
                                 "c58_cDC_CD1C" = "DC",
                                 "c59_cDC_IL1B" = "DC",
                                 "c60_cDC_LAMP3" = "DC",
                                 "c61_Mph_FCGR3A" = "Macro",
                                 "c62_Mph_S100A8" = "Macro",
                                 "c63_Mph_CCL20" = "Macro",
                                 "c64_Mph_SPP1" = "Macro",
                                 "c65_Mph_APOE" = "Macro",
                                 "c66_Endo_LYVE1" = "Endothelial",
                                 "c67_Endo_ACKR1" = "Endothelial",
                                 "c68_Endo_FABP5" = "Endothelial",
                                 "c69_Endo_CXCL12" = "Endothelial",
                                 "c70_Endo_COL4A1" = "Endothelial",
                                 "c71_Endo_MKI67" = "Endothelial",
                                 "c72_Fibro_SOX6" = "Fibroblast",
                                 "c73_Fibro_ADAMDEC1" = "Fibroblast",
                                 "c74_Fibro_C7" = "Fibroblast",
                                 "c75_Fibro_CCL19" = "Fibroblast",
                                 "c76_Fibro_PI16" = "Fibroblast",
                                 "c77_Fibro_ACTA2" = "Fibroblast",
                                 "c78_Fibro_DES" = "Fibroblast",
                                 "c79_Fibro_FAP" = "Fibroblast",
                                 "c80_Fibro_MKI67" = "Fibroblast"))
table(datafilt$celltype_major)

## Mast 降维聚类注释

celltypes <- c("MAST")

Mast <- subset(datafilt, subset = celltype_major %in% celltypes)

nfeatures = 2000
ndim = 15
neigh = 75
dist = 0.5
res = 0.2

Mast <- NormalizeData(Mast, scale.factor = 10000,
                      normalization.method = "LogNormalize")

Mast <- FindVariableFeatures(Mast, nfeatures = nfeatures, 
                             selection.method = "vst")

Mast <- ScaleData(Mast, features = VariableFeatures(Mast))

Mast <- RunPCA(Mast, assay = 'RNA', slot = 'scale.data')

Mast <- RunHarmony(Mast, group.by.vars = "sample",dims.use = 1:50,
                   assay.use = "RNA")

Mast <- FindNeighbors(Mast, k.param = neigh,
                      dims = 1:ndim, reduction = "harmony")

Mast <- FindClusters(Mast, resolution = 0.4, n.iter = 50)

Mast <- RunUMAP(Mast, dims = 1:ndim,
                n.neighbors = neigh, min.dist = dist, 
                reduction = "harmony", reduction.name = "umap_harmony")

plot <- dimplot_new(data = Mast,
                    reduction = "umap_harmony",
                    pt.size = 1, label = F,
                    group.by = c("seurat_clusters"))
plot

Mast <- subset(Mast, idents = c(0:5))

Mast <- FindNeighbors(Mast, k.param = neigh,
                      dims = 1:ndim, reduction = "harmony")

Mast <- FindClusters(Mast, resolution = 0.4, n.iter = 50)

Mast <- RunUMAP(Mast, dims = 1:ndim,
                n.neighbors = neigh, min.dist = dist, 
                reduction = "harmony", reduction.name = "umap_harmony")

plot <- dimplot_new(data = Mast,
                    reduction = "umap_harmony",
                    pt.size = 1, label = F,
                    group.by = c("seurat_clusters"))
plot

i = "ZFP36"

my_colors <- c("#F0F0F0",'#EDD1D8', '#f4a3a8', '#e38191', '#cc607d', '#ad466c', '#8b3058', '#672044')

#col <- colorRampPalette(c("#F0F0F0","#E5E0ED","#BFC6DD","#8CADCC","#4E92BA","#1871A8","#085889","#003758"))(100)

FeaturePlot(Mast, features = i, reduction = "umap_harmony", pt.size = 1, raster = FALSE) + 
  theme_bw() +  # Use a clean, white background
  theme(
    panel.grid = element_blank(),            # Remove grid lines
    axis.ticks = element_blank(),            # Remove axis ticks
    axis.text = element_blank(),             # Remove axis text
    axis.title = element_text(colour = "black", size = 15),  # Customize axis title
    plot.title = element_text(size = 17, hjust = 0.5),  # Customize plot title, center-align it
    panel.border = element_blank(),          # Remove the panel border
    legend.position = "right"                # Keep the color bar on the right
  ) + 
  scale_color_gradientn(colors = my_colors) +  # Apply the custom color palette for continuous data
  labs(x = ' ', y = ' ', title = i)

## Mast 注释

Mast$celltype_cellchat_BmMast <- ifelse(
  Mast$seurat_clusters == "2", "Mast: CD74", "Mast: ZFP36")

table(Mast$celltype_cellchat_BmMast)

## 提取 Bm: DUSP4

Bm_DUSP4 <- subset(Bm_DUSP4, subset = cohort == "GSE236581")

Bm_DUSP4$celltype_cellchat_BmMast <- "Bm: DUSP4"

BmMast_cellchat <- merge(Bm_DUSP4,
                         list(Mast))

nfeatures = 2000
ndim = 15
neigh = 75
dist = 0.5
res = 0.2

BmMast_cellchat <- NormalizeData(BmMast_cellchat, scale.factor = 10000,
                                 normalization.method = "LogNormalize")

BmMast_cellchat <- FindVariableFeatures(BmMast_cellchat, nfeatures = nfeatures, 
                                        selection.method = "vst")

BmMast_cellchat <- ScaleData(BmMast_cellchat, features = VariableFeatures(Mast))

BmMast_cellchat <- RunPCA(BmMast_cellchat, assay = 'RNA', slot = 'scale.data')

BmMast_cellchat <- RunHarmony(BmMast_cellchat, group.by.vars = "celltype_cellchat_BmMast",dims.use = 1:50,
                              assay.use = "RNA")

BmMast_cellchat <- FindNeighbors(BmMast_cellchat, k.param = neigh,
                                 dims = 1:ndim, reduction = "harmony")

BmMast_cellchat <- FindClusters(BmMast_cellchat, resolution = 0.4, n.iter = 50)

BmMast_cellchat <- RunUMAP(BmMast_cellchat, dims = 1:ndim,
                           n.neighbors = neigh, min.dist = dist, 
                           reduction = "harmony", reduction.name = "umap_harmony")

plot <- dimplot_new(data = BmMast_cellchat,
                    reduction = "umap_harmony",
                    pt.size = 1, label = F,
                    group.by = c("celltype_cellchat_BmMast"))
plot


## cellchat pipeline

library(Seurat)
library(ggsignif)
library(ggpubr)
library(cowplot)
library(dplyr)
library(NMF)
library(ggalluvial)
library(CellChat)
library(pheatmap)
library(qs)
library(patchwork)
library(future)
library(CellChat)
library(Seurat)
library(future)

datafilt_cellchat <- BmMast_cellchat

table(datafilt_cellchat$celltype_cellchat_BmMast)

table(datafilt_cellchat$response)

datafilt_cellchat$group <- datafilt_cellchat$response

table(datafilt_cellchat$group)

setwd("~/Steven Lijiajun/Pancancer ICB B cell atlas/analyses/09_Bm: DUSP4 and Mast cell/GSE236581")

# 按组循环分析
for (group in unique(datafilt_cellchat$group)) {
  
  # 子集数据
  data_subset <- datafilt_cellchat[, datafilt_cellchat$group == group]
  
  # 创建 CellChat 对象
  data_cellchat <- createCellChat(object = GetAssayData(data_subset, assay = "RNA", slot = "data"))
  
  # 使用 celltype_cellchat_BmMast 作为细胞分群信息
  meta_info <- data.frame(celltype_cellchat_BmMast = data_subset$celltype_cellchat_BmMast, row.names = colnames(data_subset))
  data_cellchat <- addMeta(data_cellchat, meta = meta_info, meta.name = "celltype_cellchat_BmMast")
  data_cellchat <- setIdent(data_cellchat, ident.use = "celltype_cellchat_BmMast")
  
  # 加载人类 CellChat 数据库
  CellChatDB <- CellChatDB.human
  data_cellchat@DB <- CellChatDB
  
  # 表达数据预处理
  data_cellchat <- subsetData(data_cellchat)
  data_cellchat <- identifyOverExpressedGenes(data_cellchat)
  data_cellchat <- identifyOverExpressedInteractions(data_cellchat)
  
  # 设置并行参数
  options(future.globals.maxSize = 20 * 1024^3)  # 20GB
  plan("multisession", workers = 6)
  
  # 推断细胞通讯网络
  data_cellchat <- computeCommunProb(data_cellchat)
  data_cellchat <- filterCommunication(data_cellchat, min.cells = 10)
  data_cellchat <- computeCommunProbPathway(data_cellchat)
  data_cellchat <- aggregateNet(data_cellchat)
  data_cellchat <- netAnalysis_computeCentrality(data_cellchat, slot.name = "netP")
  
  # 保存结果
  saveRDS(data_cellchat, paste0(group, "_CellChat.rds"))
}

## 下游分析

NR_CellChat <- readRDS("~/Steven Lijiajun/Pancancer ICB B cell atlas/analyses/09_Bm: DUSP4 and Mast cell/GSE236581/NR_CellChat.rds")
R_CellChat <- readRDS("~/Steven Lijiajun/Pancancer ICB B cell atlas/analyses/09_Bm: DUSP4 and Mast cell/GSE236581/R_CellChat.rds")

object.list <- list(NR = NR_CellChat, R = R_CellChat)
cellchat <- mergeCellChat(object.list, add.names = names(object.list))

gg1 <- compareInteractions(cellchat, show.legend = F, group = c(1,2))
gg2 <- compareInteractions(cellchat, show.legend = F, group = c(1,2), measure = "weight")
gg1 + gg2

par(mfrow = c(1,2), xpd=TRUE)
netVisual_diffInteraction(cellchat, weight.scale = T, targets.use = 'Bm: DUSP4')
netVisual_diffInteraction(cellchat, weight.scale = T, measure = "weight", targets.use = 'Bm: DUSP4')

gg1 <- netVisual_heatmap(cellchat)
gg2 <- netVisual_heatmap(cellchat, measure = "weight")
gg1 + gg2

weight.max <- getMaxWeight(object.list, attribute = c("idents","count"))
par(mfrow = c(1,2), xpd=TRUE)
for (i in 1:length(object.list)) 
{  netVisual_circle(object.list[[i]]@net$count, weight.scale = T, 
                    label.edge= F, edge.weight.max = weight.max[2], 
                    edge.width.max = 12, 
                    title.name = paste0("Number of interactions - ", names(object.list)[i]),
                    targets.use = 'Bm: DUSP4')}

gg1 <- netAnalysis_signalingChanges_scatter(cellchat, idents.use = "Bm: DUSP4")
gg1

gg1 <- rankNet(cellchat, mode = "comparison", stacked = T, do.stat = TRUE, targets.use = 'Bm: DUSP4')
gg2 <- rankNet(cellchat, mode = "comparison", stacked = F, do.stat = TRUE, targets.use = 'Bm: DUSP4')
gg1 + gg2

library(ComplexHeatmap)
i = 1
pathway.union <- union(object.list[[i]]@netP$pathways, object.list[[i+1]]@netP$pathways)
ht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[i], width = 8 ,height = 15, color.heatmap = "GnBu")
ht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]], pattern = "outgoing", signaling = pathway.union, title = names(object.list)[i+1], width = 8, height = 15, color.heatmap = "GnBu")
draw(ht1 + ht2, ht_gap = unit(0.5, "cm"))

ht1 = netAnalysis_signalingRole_heatmap(object.list[[i]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[i], width = 8 ,height = 15, color.heatmap = "GnBu")
ht2 = netAnalysis_signalingRole_heatmap(object.list[[i+1]], pattern = "incoming", signaling = pathway.union, title = names(object.list)[i+1], width = 8, height = 15, color.heatmap = "GnBu")
draw(ht1 + ht2, ht_gap = unit(0.5, "cm"))


netVisual_bubble(cellchat, sources.use = 1:5, targets.use = 1:5,  comparison = c(1, 2), angle.x = 45)

